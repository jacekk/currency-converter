{"version":3,"sources":["constants.js","ducks/rates.js","helpers.js","ducks/controls.js","ducks/index.js","store.js","components/AppFooter/AppFooter.jsx","components/Controls/Controls.jsx","components/Controls/index.js","components/Results/dataSource.js","components/Results/columns.jsx","components/Results/index.js","components/Results/Results.jsx","components/App/App.jsx","registerServiceWorker.js","index.js","components/App/index.jsx"],"names":["CURRENCIES","DEFAULT_STATE","comparison","main","FETCH_MAIN_START","FETCH_MAIN_SUCCESS","FETCH_COMPARISON_START","FETCH_COMPARISON_SUCCESS","fetchMainRatesAsync","dispatch","getState","controls","dateFormatted","mainDate","format","base","currency","fullUrl","concat","type","axios","get","then","response","payload","mainRatesFetched","fetchComparisonRatesAsync","comparisonDate","comparisonRatesFetched","limitAmount","amount","numericValue","min","max","Math","moment","subtract","isCalculatorEnabled","isComparisonEnabled","AMOUNT_CHANGE","CALCULATOR_TOGGLE","COMPARISON_DATE_CHANGE","COMPARISON_TOGGLE","CURRENCY_CHANGE","MAIN_DATE_CHANGE","changeMainDateAsync","momentDate","changeComparisonDateAsync","toggleComparisonAsync","isEnabled","toggleComparison","changeCurrencyAsync","ducks","state","arguments","length","undefined","action","parseFloat","isNaN","Object","objectSpread","indexOf","rates","enhancers","compose","applyMiddleware","thunk","persistState","deserialize","storedString","parsed","JSON","parse","ignore","set","key","window","devToolsExtension","f","store","createStore","combineReducers","reducers","Footer","AppFooter_AppFooter","props","react_default","a","createElement","className","pkg","author","href","repository","url","target","title","version","Option","connect","onAmountChange","val","onCalculationToggle","ev","checked","onComparisonDateChange","onComparisonToggle","onCurrencyChange","onMainDateChange","row","justify","gutter","col","span","es_select","onChange","showSearch","value","map","item","date_picker","allowClear","es_checkbox","disabled","input_number","prepareDataSource","_ref","comparisons","currencies","hasCals","hasComparison","rate","comparisonRate","calculated","compCalculated","diff","ratio","numeral","diffRender","text","cellClass","getColumns","dataIndex","ratesDate","render","filter","Boolean","keys","table","bordered","columns","dataSource","pagination","size","Header","Content","App_App","layout","components_Controls","components_Results","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","es","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5308b5e3.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://frankfurter.app/'\nexport const API_DATE_FORMAT = 'YYYY-MM-DD'\nexport const MIN_AMOUNT = 1\nexport const MAX_AMOUNT = 1e6\n\nexport const RATE_FORMAT = '0,0.00'\nexport const CALC_FORMAT = '0,0.00'\nexport const PERCENT_FORMAT = '(0.00 %)'\nexport const ZERO_FORMATTED = '0.00'\n\nexport const CURRENCIES = [\n    'AUD',\n    'BGN',\n    'BRL',\n    'CAD',\n    'CHF',\n    'CNY',\n    'CZK',\n    'DKK',\n    'EUR',\n    'GBP',\n    'HKD',\n    'HRK',\n    'HUF',\n    'IDR',\n    'ILS',\n    'INR',\n    'JPY',\n    'KRW',\n    'MXN',\n    'MYR',\n    'NOK',\n    'NZD',\n    'PHP',\n    'PLN',\n    'RON',\n    'RUB',\n    'SEK',\n    'SGD',\n    'THB',\n    'TRY',\n    'USD',\n    'ZAR',\n]\n","import axios from 'axios'\nimport { get } from 'lodash'\n\nimport { API_BASE_URL, API_DATE_FORMAT } from '../constants'\n\nexport const DEFAULT_STATE = {\n    comparison: {},\n    main: {},\n}\n\nconst FETCH_MAIN_START = 'rates/FETCH_MAIN_START'\nconst FETCH_MAIN_SUCCESS = 'rates/FETCH_MAIN_SUCCESS'\nconst FETCH_COMPARISON_START = 'rates/FETCH_COMPARISON_START'\nconst FETCH_COMPARISON_SUCCESS = 'rates/FETCH_COMPARISON_SUCCESS'\n\n// sync\n\nexport const fetchMainRates = () => ({\n    type: FETCH_MAIN_START,\n})\n\nexport const fetchComparisonRates = () => ({\n    type: FETCH_COMPARISON_START,\n})\n\nexport const mainRatesFetched = (response) => ({\n    type: FETCH_MAIN_SUCCESS,\n    payload: get(response, 'data.rates'),\n})\n\nexport const comparisonRatesFetched = (response) => ({\n    type: FETCH_COMPARISON_SUCCESS,\n    payload: get(response, 'data.rates'),\n})\n\n// async\n\nexport const fetchOnPageLoadAsync = () => (dispatch, getState) => {\n    dispatch(fetchMainRatesAsync())\n\n    if (get(getState(), 'controls.isComparisonEnabled')) {\n        dispatch(fetchComparisonRatesAsync())\n    }\n}\n\nexport const fetchMainRatesAsync = () => (dispatch, getState) => {\n    const { controls } = getState()\n    const dateFormatted = controls.mainDate.format(API_DATE_FORMAT)\n    const base = controls.currency\n    const fullUrl = `${API_BASE_URL}${dateFormatted}?base=${base}`\n\n    dispatch(fetchMainRates())\n\n    return axios.get(fullUrl).then((response) => {\n        dispatch(mainRatesFetched(response))\n    })\n}\n\nexport const fetchComparisonRatesAsync = () => (dispatch, getState) => {\n    const { controls } = getState()\n    const dateFormatted = controls.comparisonDate.format(API_DATE_FORMAT)\n    const base = controls.currency\n    const fullUrl = `${API_BASE_URL}${dateFormatted}?base=${base}`\n\n    dispatch(fetchComparisonRates())\n\n    return axios.get(fullUrl).then((response) => {\n        dispatch(comparisonRatesFetched(response))\n    })\n}\n\nexport default function ratesReducer(state = DEFAULT_STATE, action = {}) {\n    switch (action.type) {\n        case FETCH_MAIN_START:\n            return { ...state, main: {} }\n        case FETCH_MAIN_SUCCESS:\n            return { ...state, main: action.payload }\n        case FETCH_COMPARISON_START:\n            return { ...state, comparison: {} }\n        case FETCH_COMPARISON_SUCCESS:\n            return { ...state, comparison: action.payload }\n        default:\n            return state\n    }\n}\n","import { MIN_AMOUNT, MAX_AMOUNT } from './constants'\n\nexport const limitNumber = (numericValue, min, max) =>\n    Math.min(max, Math.max(min, numericValue))\n\nexport const limitAmount = (amount) =>\n    limitNumber(amount, MIN_AMOUNT, MAX_AMOUNT)\n","import moment from 'moment'\n\nimport { fetchMainRatesAsync, fetchComparisonRatesAsync } from './rates'\nimport { limitAmount } from '../helpers'\nimport { CURRENCIES } from '../constants'\n\nexport const DEFAULT_STATE = {\n    amount: 100,\n    comparisonDate: moment().subtract(1, 'months'),\n    currency: 'PLN',\n    isCalculatorEnabled: false,\n    isComparisonEnabled: false,\n    mainDate: moment(),\n}\n\nexport const AMOUNT_CHANGE = 'controls/AMOUNT_CHANGE'\nexport const CALCULATOR_TOGGLE = 'controls/CALCULATOR_TOGGLE'\nexport const COMPARISON_DATE_CHANGE = 'controls/COMPARISON_DATE_CHANGE'\nexport const COMPARISON_TOGGLE = 'controls/COMPARISON_TOGGLE'\nexport const CURRENCY_CHANGE = 'controls/CURRENCY_CHANGE'\nexport const MAIN_DATE_CHANGE = 'controls/MAIN_DATE_CHANGE'\n\n// sync\n\nexport const changeAmount = (payload) => ({\n    type: AMOUNT_CHANGE,\n    payload,\n})\n\nexport const toggleCalculator = (isEnabled) => ({\n    type: CALCULATOR_TOGGLE,\n    payload: isEnabled,\n})\n\nexport const changeComparisonDate = (newDate) => ({\n    type: COMPARISON_DATE_CHANGE,\n    payload: newDate,\n})\n\nexport const changeCurrency = (payload) => ({\n    type: CURRENCY_CHANGE,\n    payload,\n})\n\nexport const changeMainDate = (payload) => ({\n    type: MAIN_DATE_CHANGE,\n    payload,\n})\n\nexport const toggleComparison = (isEnabled) => ({\n    type: COMPARISON_TOGGLE,\n    payload: isEnabled,\n})\n\n// async\n\nexport const changeMainDateAsync = (momentDate) => (dispatch) => {\n    dispatch(changeMainDate(momentDate))\n    dispatch(fetchMainRatesAsync())\n}\n\nexport const changeComparisonDateAsync = (momentDate) => (dispatch) => {\n    dispatch(changeComparisonDate(momentDate))\n    dispatch(fetchComparisonRatesAsync())\n}\n\nexport const toggleComparisonAsync = (isEnabled) => (dispatch) => {\n    dispatch(toggleComparison(isEnabled))\n    if (isEnabled) {\n        dispatch(fetchComparisonRatesAsync())\n    }\n}\n\nexport const changeCurrencyAsync = (currency) => (dispatch, getState) => {\n    const { controls } = getState()\n\n    dispatch(changeCurrency(currency))\n    dispatch(fetchMainRatesAsync())\n\n    if (controls.isComparisonEnabled) {\n        dispatch(fetchComparisonRatesAsync())\n    }\n}\n\nexport default function controlsReducer(state = DEFAULT_STATE, action = {}) {\n    switch (action.type) {\n        case AMOUNT_CHANGE:\n            const amount = parseFloat(action.payload)\n            if (isNaN(amount)) {\n                return state\n            }\n            return { ...state, amount: limitAmount(amount) }\n        case CALCULATOR_TOGGLE:\n            return { ...state, isCalculatorEnabled: action.payload }\n        case COMPARISON_DATE_CHANGE:\n            return { ...state, comparisonDate: action.payload }\n        case COMPARISON_TOGGLE:\n            return { ...state, isComparisonEnabled: action.payload }\n        case CURRENCY_CHANGE:\n            if (!~CURRENCIES.indexOf(action.payload)) {\n                return state\n            }\n            return { ...state, currency: action.payload }\n        case MAIN_DATE_CHANGE:\n            return { ...state, mainDate: action.payload }\n        default:\n            return state\n    }\n}\n","import controls from './controls'\nimport rates from './rates'\n\nexport default {\n    controls,\n    rates,\n}\n","import { get, set } from 'lodash'\nimport moment from 'moment'\nimport { combineReducers, compose, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport persistState from 'redux-localstorage'\n\nimport reducers from './ducks'\nimport { fetchOnPageLoadAsync } from './ducks/rates'\n\nconst DEFAULT_STATE = {}\n\nconst deserialize = (storedString) => {\n    const mainPath = 'controls.mainDate'\n    const compPath = 'controls.comparisonDate'\n\n    let parsed = {}\n\n    try {\n        parsed = JSON.parse(storedString)\n    } catch (ignore) {}\n\n    set(parsed, mainPath, moment(get(parsed, mainPath)))\n    set(parsed, compPath, moment(get(parsed, compPath)))\n\n    return parsed\n}\n\nconst enhancers = compose(\n    applyMiddleware(thunk),\n    persistState(['controls'], {\n        deserialize,\n        key: 'currency-converter-v0.1.0',\n    }),\n    window.devToolsExtension ? window.devToolsExtension() : (f) => f\n)\n\nconst store = createStore(combineReducers(reducers), DEFAULT_STATE, enhancers)\n\nstore.dispatch(fetchOnPageLoadAsync())\n\nexport default store\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport pkg from '../../../package.json'\n\nimport './AppFooter.css'\n\nconst { Footer } = Layout\n\nconst renderGithubLink = () => (\n    <a href={pkg.repository.url} target=\"blank\" title=\"Go to GitHub repo\">\n        GitHub\n    </a>\n)\n\nexport default (props) => (\n    <Footer className=\"AppFooter\">\n        <div>{pkg.author}</div>\n        <div>Source: {renderGithubLink()}</div>\n        <div>v{pkg.version}</div>\n    </Footer>\n)\n","import React from 'react'\nimport { DatePicker, Select, Row, Col, Checkbox, InputNumber } from 'antd'\n\nimport { CURRENCIES, MAX_AMOUNT, MIN_AMOUNT } from '../../constants'\n\nimport './Controls.css'\n\nconst { Option } = Select\n\nconst renderOptions = () =>\n    CURRENCIES.map((item) => <Option key={item}>{item}</Option>)\n\nexport default (props) => (\n    <Row type=\"flex\" justify=\"center\" gutter={16}>\n        <Col span={4}>\n            <Select\n                className=\"Controls-currencySelect\"\n                onChange={props.onCurrencyChange}\n                showSearch\n                value={props.currency}\n            >\n                {renderOptions()}\n            </Select>\n        </Col>\n        <Col span={4}>\n            <DatePicker\n                allowClear={false}\n                onChange={props.onMainDateChange}\n                value={props.mainDate}\n            />\n        </Col>\n        <Col span={4} className=\"Controls-checkbox\">\n            <Checkbox\n                checked={props.isComparisonEnabled}\n                onChange={props.onComparisonToggle}\n            >\n                Compare?\n            </Checkbox>\n        </Col>\n        <Col span={4}>\n            <DatePicker\n                allowClear={false}\n                disabled={!props.isComparisonEnabled}\n                onChange={props.onComparisonDateChange}\n                value={props.comparisonDate}\n            />\n        </Col>\n        <Col span={4} className=\"Controls-checkbox\">\n            <Checkbox\n                checked={props.isCalculatorEnabled}\n                onChange={props.onCalculationToggle}\n            >\n                Calculate?\n            </Checkbox>\n        </Col>\n        <Col span={4}>\n            <InputNumber\n                disabled={!props.isCalculatorEnabled}\n                min={MIN_AMOUNT}\n                max={MAX_AMOUNT}\n                onChange={props.onAmountChange}\n                value={props.amount}\n            />\n        </Col>\n    </Row>\n)\n","import { connect } from 'react-redux'\n\nimport {\n    changeAmount,\n    changeComparisonDateAsync,\n    changeCurrencyAsync,\n    changeMainDateAsync,\n    toggleCalculator,\n    toggleComparisonAsync,\n} from '../../ducks/controls'\n\nimport Controls from './Controls'\n\nconst mapStateToProps = (state) => ({\n    ...state.controls,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onAmountChange: (val) => dispatch(changeAmount(val)),\n    onCalculationToggle: (ev) => dispatch(toggleCalculator(ev.target.checked)),\n    onComparisonDateChange: (val) => dispatch(changeComparisonDateAsync(val)),\n    onComparisonToggle: (ev) => dispatch(toggleComparisonAsync(ev.target.checked)),\n    onCurrencyChange: (val) => dispatch(changeCurrencyAsync(val)),\n    onMainDateChange: (val) => dispatch(changeMainDateAsync(val)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls)\n","import numeral from 'numeral'\n\nimport {\n    RATE_FORMAT,\n    CALC_FORMAT,\n    PERCENT_FORMAT,\n} from '../../constants'\n\nexport const prepareDataSource = ({\n    amount,\n    comparisons,\n    currencies,\n    hasCals,\n    hasComparison,\n    rates,\n}) =>\n    currencies.map((currency) => {\n        const rate = rates[currency] || 0\n\n        let comparisonRate = 0\n        let calculated = 0\n        let compCalculated = 0\n        let diff = 0\n        let ratio = 0\n\n        if (hasCals) {\n            calculated = rate * amount\n        }\n\n        if (hasComparison) {\n            comparisonRate = comparisons[currency]\n\n            if (comparisonRate) {\n                diff = rate - comparisonRate\n                ratio = rate / comparisonRate\n\n                if (hasCals) {\n                    compCalculated = comparisonRate * amount\n                }\n            }\n        }\n\n        return {\n            key: currency,\n            rate: numeral(rate).format(RATE_FORMAT),\n            comparisonRate: numeral(comparisonRate).format(RATE_FORMAT),\n            calculated: numeral(calculated).format(CALC_FORMAT),\n            compCalculated: numeral(compCalculated).format(CALC_FORMAT),\n            diff: numeral(diff).format(CALC_FORMAT),\n            ratio: numeral(ratio).format(PERCENT_FORMAT),\n        }\n    })\n","import React from 'react'\n\nimport { ZERO_FORMATTED } from '../../constants'\n\nexport const diffRender = (text) => {\n    let cellClass = 'Results-diffIncrease'\n\n    if (text === ZERO_FORMATTED) {\n        cellClass = 'Results-noDiff'\n    } else if (text[0] === '-') {\n        cellClass = 'Results-diffDecrease'\n    }\n\n    return <span className={cellClass}>{text}</span>\n}\n\nexport const getColumns = (props) =>\n    [\n        {\n            title: 'currencies',\n            dataIndex: 'key',\n            key: 'key',\n        },\n        {\n            title: `${props.ratesDate} | rates`,\n            dataIndex: 'rate',\n            key: 'rate',\n        },\n        props.hasComparison && {\n            title: `${props.comparisonDate} | rates`,\n            dataIndex: 'comparisonRate',\n            key: 'comparisonRate',\n        },\n        props.hasCals && {\n            title: `${props.ratesDate} | calculated`,\n            dataIndex: 'calculated',\n            key: 'calculated',\n        },\n        props.hasComparison &&\n            props.hasCals && {\n                title: `${props.comparisonDate} | calculated`,\n                dataIndex: 'compCalculated',\n                key: 'compCalculated',\n            },\n        props.hasComparison && {\n            title: `difference`,\n            dataIndex: 'diff',\n            key: 'diff',\n            render: diffRender,\n        },\n        props.hasComparison && {\n            title: `ratio`,\n            dataIndex: 'ratio',\n            key: 'ratio',\n        },\n    ].filter(Boolean)\n","import { connect } from 'react-redux'\n\nimport { API_DATE_FORMAT} from '../../constants'\n\nimport Results from './Results'\n\nconst mapStateToProps = (state) => ({\n    amount: state.controls.amount,\n    comparisons: state.rates.comparison,\n    comparisonDate: state.controls.comparisonDate.format(API_DATE_FORMAT),\n    currencies: Object.keys(state.rates.main),\n    hasCals: state.controls.isCalculatorEnabled,\n    hasComparison: state.controls.isComparisonEnabled,\n    rates: state.rates.main,\n    ratesDate: state.controls.mainDate.format(API_DATE_FORMAT),\n})\n\nexport default connect(mapStateToProps)(Results)\n","import React from 'react'\nimport { Table } from 'antd'\n\nimport { prepareDataSource } from './dataSource'\nimport { getColumns } from './columns'\n\nimport './Results.css'\n\nexport default (props) => (\n    <Table\n        bordered\n        className=\"Results-table\"\n        columns={getColumns(props)}\n        dataSource={prepareDataSource(props)}\n        pagination={false}\n        size=\"small\"\n    />\n)\n","import React from 'react'\nimport { Layout } from 'antd'\n\nimport AppFooter from '../AppFooter'\nimport Controls from '../Controls'\nimport Results from '../Results'\n\nimport './App.css'\n\nconst { Header, Content } = Layout\n\nexport default () => (\n    <Layout className=\"App\">\n        <Header className=\"App-header\">\n            <Controls />\n        </Header>\n        <Content className=\"App-body\">\n            <Results />\n        </Content>\n        <AppFooter />\n    </Layout>\n)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './components/App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport store from '../../store'\n\nimport App from './App'\n\nexport default () => (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n"],"sourceRoot":""}